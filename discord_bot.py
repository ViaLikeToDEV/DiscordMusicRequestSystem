import discord
from discord.ext import commands
import requests
import json
import re
from urllib.parse import urlparse, parse_qs

# Load config
with open('config.json', 'r', encoding='utf-8') as f:
    config = json.load(f)

# Bot setup
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix=config['discord']['command_prefix'], intents=intents)

API_BASE = f"http://{config['server']['host']}:{config['server']['port']}"

def is_youtube_url(url):
    """Check if URL is a valid YouTube URL"""
    youtube_regex = re.compile(
        r'(https?://)?(www\.)?(youtube|youtu|youtube-nocookie)\.(com|be)/'
        r'(watch\?v=|embed/|v/|.+\?v=)?([^&=%\?]{11})'
    )
    return youtube_regex.match(url) is not None

@bot.event
async def on_ready():
    print(f'üéµ {bot.user} is ready to rock! üéµ')

@bot.command(name='play')
async def play(ctx, *, url):
    """Add a song to the queue"""
    if not is_youtube_url(url):
        await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå YouTube ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        return
    
    try:
        # Send processing message
        processing_msg = await ctx.send(f"‚è≥ Processing...")
        
        # Add to queue via API
        response = requests.post(f"{API_BASE}/add_song", json={"url": url})
        data = response.json()
        
        if response.status_code == 200:
            await processing_msg.edit(content=f"‚úÖ Added to queue: **{data['title']}**")
        else:
            await processing_msg.edit(content=f"‚ùå Error: {data.get('error', 'Unknown error')}")
    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

@bot.command(name='skip')
async def skip(ctx):
    """Skip the current song"""
    try:
        response = requests.post(f"{API_BASE}/skip")
        if response.status_code == 200:
            await ctx.send("‚è≠Ô∏è ‡πÄ‡∏û‡∏•‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ!")
        else:
            await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏î‡πâ")
    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

@bot.command(name='pause')
async def pause(ctx):
    """Pause the current song"""
    try:
        response = requests.post(f"{API_BASE}/pause")
        if response.status_code == 200:
            await ctx.send("‚è∏Ô∏è ‡∏û‡∏±‡∏Å‡πÄ‡∏û‡∏•‡∏á")
        else:
            await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏±‡∏Å‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏î‡πâ")
    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

@bot.command(name='resume')
async def resume(ctx):
    """Resume the current song"""
    try:
        response = requests.post(f"{API_BASE}/resume")
        if response.status_code == 200:
            await ctx.send("‚ñ∂Ô∏è ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠")
        else:
            await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ")
    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

@bot.command(name='volume')
async def volume(ctx, vol: int):
    """Set volume (0-100)"""
    if not 0 <= vol <= 100:
        await ctx.send("‚ùå ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0-100")
        return
    
    try:
        response = requests.post(f"{API_BASE}/volume", json={"volume": vol})
        if response.status_code == 200:
            await ctx.send(f"üîä ‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡πá‡∏ô {vol}%")
        else:
            await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏î‡πâ")
    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

@bot.command(name='np')
async def now_playing(ctx):
    """Show current playing and queue"""
    try:
        response = requests.get(f"{API_BASE}/status")
        data = response.json()
        
        if response.status_code == 200:
            msg = "üéµ **Now Playing:**\n"
            if data['current_song']:
                msg += f"‚ñ∂Ô∏è {data['current_song']['title']}\n\n"
            else:
                msg += "‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô\n\n"
            
            if data['queue']:
                msg += "üìã **Queue:**\n"
                for i, song in enumerate(data['queue'][:5], 1):
                    msg += f"{i}. {song['title']}\n"
                if len(data['queue']) > 5:
                    msg += f"...‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å {len(data['queue']) - 5} ‡πÄ‡∏û‡∏•‡∏á"
            else:
                msg += "üìã **Queue:** ‡∏ß‡πà‡∏≤‡∏á"
            
            await ctx.send(msg)
        else:
            await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ")
    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

if __name__ == "__main__":
    bot.run(config['discord']['token'])